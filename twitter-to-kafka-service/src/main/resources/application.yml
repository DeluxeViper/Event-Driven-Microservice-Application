twitter-to-kafka-service:
  twitter-keywords:
    - Java
    - Microservices
    - Spring
    - Kafka
    - Elasticsearch
  welcome-message: Hello Microservices!

retry-config:
  initial-interval-ms: 1000
  max-interval-ms: 10000
  multiplier: 2.0
  maxAttempts: 3
  sleep-time-ms: 2000

kafka-config:
  bootstrap-servers: localhost:19092, localhost:29092, localhost:39092
  schema-registry-url-key: schema.registry.url
  schema-registry-url: http://localhost:8081
  topic-name: twitter-topic
  topic-name-to-create:
    - twitter-topic
  num-of-partitions: 3
  replication-factor: 3

kafka-producer-config:
  key-serializer-class: org.apache.kafka.common.serialization.LongSerializer # long variable for key
  value-serializer-class: io.confluent.kafka.serializers.KafkaAvroSerializer
  compression-type: snappy # compression library from google (faster than other options)
  acks: all # acknowledgement from all replicas to be resilient (1 or 0 are the other options)
  batch-size: 16384
  batch-size-boost-factor: 100 # tune for higher throughput
  linger-ms: 5 # add a delay on producer in case of light load
  request-timeout-ms: 60000 # 60 seconds, if 60 seconds no ack comes, producer will throw a timeout error
  retry-count: 5